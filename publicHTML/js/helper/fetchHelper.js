"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FetchHelper = void 0;

require("core-js/modules/web.dom.iterable");

class FetchHelper {
  static async json(url) {
    const response = await fetch(url);

    if (!response.ok) {
      throw Error("failed to fetch: " + url);
    }

    const json = await response.json();
    return json;
  }

  static async text(url) {
    const response = await fetch(url);

    if (!response.ok) {
      throw Error("failed to fetch: " + url);
    }

    const rawText = await response.text();
    return rawText;
  }

  static async texts(urls) {
    const promises = urls.map(url => fetch(url));
    const answers = await Promise.all(promises);
    let errorCount = answers.filter(value => !value.ok).length;

    if (errorCount > 0) {
      throw Error("Failed to fetch file from server");
    }

    let textPromises = answers.map(value => value.text());
    const texts = await Promise.all(textPromises);
    return texts;
  }

  static async postJson(url, jsonData) {
    const inputData = JSON.stringify(jsonData);
    const response = await fetch(url, {
      method: 'POST',
      body: inputData,
      header: {
        contentType: 'application/json'
      }
    });

    if (!response.ok) {
      throw Error(response.statusText);
    }

    const returnJson = await response.json();
    return returnJson;
  }

} //# sourceURL=fetchHelper.js


exports.FetchHelper = FetchHelper;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9qcy9oZWxwZXIvZmV0Y2hIZWxwZXIuanMiXSwibmFtZXMiOlsiRmV0Y2hIZWxwZXIiLCJqc29uIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJ0ZXh0IiwicmF3VGV4dCIsInRleHRzIiwidXJscyIsInByb21pc2VzIiwibWFwIiwiYW5zd2VycyIsIlByb21pc2UiLCJhbGwiLCJlcnJvckNvdW50IiwiZmlsdGVyIiwidmFsdWUiLCJsZW5ndGgiLCJ0ZXh0UHJvbWlzZXMiLCJwb3N0SnNvbiIsImpzb25EYXRhIiwiaW5wdXREYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1ldGhvZCIsImJvZHkiLCJoZWFkZXIiLCJjb250ZW50VHlwZSIsInN0YXR1c1RleHQiLCJyZXR1cm5Kc29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTyxNQUFNQSxXQUFOLENBQWtCO0FBQ3JCLGVBQWFDLElBQWIsQ0FBa0JDLEdBQWxCLEVBQXVCO0FBQ25CLFVBQU1DLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUNGLEdBQUQsQ0FBNUI7O0FBQ0EsUUFBSSxDQUFDQyxRQUFRLENBQUNFLEVBQWQsRUFBa0I7QUFDZCxZQUFNQyxLQUFLLENBQUMsc0JBQXNCSixHQUF2QixDQUFYO0FBQ0g7O0FBRUQsVUFBTUQsSUFBSSxHQUFHLE1BQU1FLFFBQVEsQ0FBQ0YsSUFBVCxFQUFuQjtBQUNBLFdBQU9BLElBQVA7QUFDSDs7QUFFRCxlQUFhTSxJQUFiLENBQWtCTCxHQUFsQixFQUF1QjtBQUNuQixVQUFNQyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDRixHQUFELENBQTVCOztBQUNBLFFBQUksQ0FBQ0MsUUFBUSxDQUFDRSxFQUFkLEVBQWtCO0FBQ2QsWUFBTUMsS0FBSyxDQUFDLHNCQUFzQkosR0FBdkIsQ0FBWDtBQUNIOztBQUVELFVBQU1NLE9BQU8sR0FBRyxNQUFNTCxRQUFRLENBQUNJLElBQVQsRUFBdEI7QUFDQSxXQUFPQyxPQUFQO0FBQ0g7O0FBRUQsZUFBYUMsS0FBYixDQUFtQkMsSUFBbkIsRUFBeUI7QUFFckIsVUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUNFLEdBQUwsQ0FBU1YsR0FBRyxJQUFJRSxLQUFLLENBQUNGLEdBQUQsQ0FBckIsQ0FBakI7QUFDQSxVQUFNVyxPQUFPLEdBQUcsTUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVlKLFFBQVosQ0FBdEI7QUFFQSxRQUFJSyxVQUFVLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixDQUFlQyxLQUFLLElBQUksQ0FBQ0EsS0FBSyxDQUFDYixFQUEvQixFQUFtQ2MsTUFBcEQ7O0FBQ0EsUUFBSUgsVUFBVSxHQUFHLENBQWpCLEVBQW9CO0FBQ2hCLFlBQU1WLEtBQUssQ0FBQyxrQ0FBRCxDQUFYO0FBQ0g7O0FBRUQsUUFBSWMsWUFBWSxHQUFHUCxPQUFPLENBQUNELEdBQVIsQ0FBWU0sS0FBSyxJQUFJQSxLQUFLLENBQUNYLElBQU4sRUFBckIsQ0FBbkI7QUFDQSxVQUFNRSxLQUFLLEdBQUcsTUFBTUssT0FBTyxDQUFDQyxHQUFSLENBQVlLLFlBQVosQ0FBcEI7QUFFQSxXQUFPWCxLQUFQO0FBQ0g7O0FBRUQsZUFBYVksUUFBYixDQUFzQm5CLEdBQXRCLEVBQTJCb0IsUUFBM0IsRUFBcUM7QUFDakMsVUFBTUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsUUFBZixDQUFsQjtBQUVBLFVBQU1uQixRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDRixHQUFELEVBQU07QUFDOUJ3QixNQUFBQSxNQUFNLEVBQUUsTUFEc0I7QUFFOUJDLE1BQUFBLElBQUksRUFBRUosU0FGd0I7QUFHOUJLLE1BQUFBLE1BQU0sRUFBRTtBQUNKQyxRQUFBQSxXQUFXLEVBQUU7QUFEVDtBQUhzQixLQUFOLENBQTVCOztBQVFBLFFBQUksQ0FBQzFCLFFBQVEsQ0FBQ0UsRUFBZCxFQUNBO0FBQ0ksWUFBTUMsS0FBSyxDQUFDSCxRQUFRLENBQUMyQixVQUFWLENBQVg7QUFDSDs7QUFFRCxVQUFNQyxVQUFVLEdBQUcsTUFBTTVCLFFBQVEsQ0FBQ0YsSUFBVCxFQUF6QjtBQUNBLFdBQU84QixVQUFQO0FBQ0g7O0FBdkRvQixDLENBeUR6QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGZXRjaEhlbHBlciB7XHJcbiAgICBzdGF0aWMgYXN5bmMganNvbih1cmwpIHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybClcclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiZmFpbGVkIHRvIGZldGNoOiBcIiArIHVybClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgICByZXR1cm4ganNvblxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyB0ZXh0KHVybCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKVxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJmYWlsZWQgdG8gZmV0Y2g6IFwiICsgdXJsKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgcmF3VGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKVxyXG4gICAgICAgIHJldHVybiByYXdUZXh0XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIHRleHRzKHVybHMpIHtcclxuXHJcbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSB1cmxzLm1hcCh1cmwgPT4gZmV0Y2godXJsKSlcclxuICAgICAgICBjb25zdCBhbnN3ZXJzID0gYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpXHJcblxyXG4gICAgICAgIGxldCBlcnJvckNvdW50ID0gYW5zd2Vycy5maWx0ZXIodmFsdWUgPT4gIXZhbHVlLm9rKS5sZW5ndGhcclxuICAgICAgICBpZiAoZXJyb3JDb3VudCA+IDApIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZmlsZSBmcm9tIHNlcnZlclwiKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHRleHRQcm9taXNlcyA9IGFuc3dlcnMubWFwKHZhbHVlID0+IHZhbHVlLnRleHQoKSlcclxuICAgICAgICBjb25zdCB0ZXh0cyA9IGF3YWl0IFByb21pc2UuYWxsKHRleHRQcm9taXNlcylcclxuXHJcbiAgICAgICAgcmV0dXJuIHRleHRzXHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIHBvc3RKc29uKHVybCwganNvbkRhdGEpIHtcclxuICAgICAgICBjb25zdCBpbnB1dERhdGEgPSBKU09OLnN0cmluZ2lmeShqc29uRGF0YSlcclxuXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgIGJvZHk6IGlucHV0RGF0YSxcclxuICAgICAgICAgICAgaGVhZGVyOiB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IocmVzcG9uc2Uuc3RhdHVzVGV4dClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHJldHVybkpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgICByZXR1cm4gcmV0dXJuSnNvblxyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VVUkw9ZmV0Y2hIZWxwZXIuanMiXX0=